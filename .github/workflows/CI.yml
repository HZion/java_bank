# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: CI/CD Workflow

on: # 이벤트 트리거
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest  # Ubuntu 최신 버전의 가상 환경에서 실행
    permissions: # 권한 부여
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4  # 리포지토리의 코드를 체크아웃

    - name: Set up JDK 11 # JDK 11 설정 단계
      uses: actions/setup-java@v4
      with:
        java-version: '11' # 사용할 Java 버전
        distribution: 'temurin' # Temurin JDK 배포판 사용
        server-id: github
        settings-path: ${{ github.workspace }}

    - name: Build with Maven
      run: mvn -B package --file pom.xml # Maven 패키지를 빌드

    - name: Publish to GitHub Packages Apache Maven
      run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml  # Maven deploy 명령 실행
      env:
        GITHUB_TOKEN: ${{ github.token }} # GitHub 토큰 환경 변수 설정

    - name: Configure AWS CLI # AWS CLI 구성 단계
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} # AWS 액세스 키 ID 이후 git secret에 추가 필요
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # AWS 비밀 액세스 키 마찬가지로 이후 git secret에 추가 필요
        aws-region: 'ap-northeast-1' # AWS 리전

    - name: Upload to S3 # S3에 파일 업로드
      run: |
        aws s3 cp target/my-artifact.jar s3://gu9duck.lion2.nyhhs.com/ --acl public-read
