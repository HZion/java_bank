name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop

  pull_request:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      deployments: write

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: "ap-northeast-1"
      DOCKER_IMAGE: insav/gugu-bank:latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Build Docker image
        run: |
          docker build -t $DOCKER_IMAGE .

      - name: Install AWS CLI
        run: |
          sudo apt-get install -y awscli

      - name: Configure AWS Credentials
        run: |
          echo "[default]" > ~/.aws/config
          echo "aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}" >> ~/.aws/credentials
          echo "aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ~/.aws/credentials

      - name: Install kops
        run: |
          curl -LO https://github.com/kubernetes/kops/releases/latest/download/kops-linux-amd64
          chmod +x kops-linux-amd64
          sudo mv kops-linux-amd64 /usr/local/bin/kops

      - name: Set up kubectl
        run: |
          kops export kubecfg --admin --name gu9duck.lion2.nyhhs.com --state s3://gu9duck.lion2.nyhhs.com --kubeconfig ./kubeconfig.yaml
          kubectl --kubeconfig=./kubeconfig.yaml get nodes

      - name: Output kubeconfig content
        run: cat kubeconfig.yaml

      - name: Install Argo CD CLI
        run: |
          curl -sSL https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64 -o argocd
          sudo install -m 0755 argocd /usr/local/bin/argocd

      - name: Update Argo CD application
        run: |
          argocd login a2448034a5e1f4ff796af814926572ff-1664569724.ap-northeast-1.elb.amazonaws.com --username admin --password ${{ secrets.ARGOCD_PASSWORD }} --insecure
          argocd app sync gu9duck-bank
          argocd app wait gu9duck-bank --timeout 150
